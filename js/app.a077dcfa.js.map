{"version":3,"file":"js/app.a077dcfa.js","mappings":"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","sources":["webpack://dapp-robonomics.network/./src/App.vue","webpack://dapp-robonomics.network/./src/components/Header.vue","webpack://dapp-robonomics.network/./src/utils/tools.js","webpack://dapp-robonomics.network/./src/components/Header.vue?801b","webpack://dapp-robonomics.network/./src/components/layouts/Main.vue","webpack://dapp-robonomics.network/./src/App.vue?7ccd","webpack://dapp-robonomics.network/./src/plugins/ipfs.js","webpack://dapp-robonomics.network/./src/plugins/robonomicsAccountManager.js","webpack://dapp-robonomics.network/./src/plugins/robonomics.js","webpack://dapp-robonomics.network/./src/views/Home.vue","webpack://dapp-robonomics.network/./src/views/Home.vue?9051","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue","webpack://dapp-robonomics.network/./src/views/PathNotFound.vue?dbdf","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue","webpack://dapp-robonomics.network/./src/hooks/useRobonomics.js","webpack://dapp-robonomics.network/./src/hooks/useAccount.js","webpack://dapp-robonomics.network/./src/hooks/useBalance.js","webpack://dapp-robonomics.network/./src/hooks/useDevices.js","webpack://dapp-robonomics.network/./src/hooks/useSubscription.js","webpack://dapp-robonomics.network/./src/hooks/useSend.js","webpack://dapp-robonomics.network/./src/views/RwsActivate.vue?116c","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue","webpack://dapp-robonomics.network/./src/views/RwsSetup.vue?d6aa","webpack://dapp-robonomics.network/./src/views/RwsSetupsList.vue","webpack://dapp-robonomics.network/./src/views/RwsSetupsList.vue?21f4","webpack://dapp-robonomics.network/./src/views/RwsUserSetup.vue","webpack://dapp-robonomics.network/./src/views/RwsUserSetup.vue?d7ee","webpack://dapp-robonomics.network/./src/views/RwsUsersList.vue","webpack://dapp-robonomics.network/./src/views/RwsUsersList.vue?76c7","webpack://dapp-robonomics.network/./src/views/Services.vue","webpack://dapp-robonomics.network/./src/views/Services.vue?0e03","webpack://dapp-robonomics.network/./src/views/haSetup/Page.vue","webpack://dapp-robonomics.network/./src/views/haSetup/FormCheck.vue","webpack://dapp-robonomics.network/./src/hooks/useIpfs.js","webpack://dapp-robonomics.network/./src/utils/telemetry.js","webpack://dapp-robonomics.network/./src/views/haSetup/FormCheck.vue?1363","webpack://dapp-robonomics.network/./src/views/haSetup/FormCreate.vue","webpack://dapp-robonomics.network/./src/views/haSetup/FormCreate.vue?c3e1","webpack://dapp-robonomics.network/./src/views/haSetup/Page.vue?682e","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue","webpack://dapp-robonomics.network/./src/views/telemetry/common.js","webpack://dapp-robonomics.network/./src/views/telemetry/launch.js","webpack://dapp-robonomics.network/./src/views/telemetry/Launch.vue?a7de","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue","webpack://dapp-robonomics.network/./src/utils/libp2p/ha.js","webpack://dapp-robonomics.network/./src/utils/libp2p/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/libp2p.js","webpack://dapp-robonomics.network/./src/views/telemetry/Libp2p.vue?d944","webpack://dapp-robonomics.network/./src/views/telemetry/Telemetry.vue?f25e","webpack://dapp-robonomics.network/./src/router.js","webpack://dapp-robonomics.network/./src/store.js","webpack://dapp-robonomics.network/./src/utils/filters.js","webpack://dapp-robonomics.network/./src/main.js","webpack://dapp-robonomics.network/webpack/bootstrap","webpack://dapp-robonomics.network/webpack/runtime/amd options","webpack://dapp-robonomics.network/webpack/runtime/chunk loaded","webpack://dapp-robonomics.network/webpack/runtime/compat get default export","webpack://dapp-robonomics.network/webpack/runtime/create fake namespace object","webpack://dapp-robonomics.network/webpack/runtime/define property getters","webpack://dapp-robonomics.network/webpack/runtime/global","webpack://dapp-robonomics.network/webpack/runtime/hasOwnProperty shorthand","webpack://dapp-robonomics.network/webpack/runtime/make namespace object","webpack://dapp-robonomics.network/webpack/runtime/node module decorator","webpack://dapp-robonomics.network/webpack/runtime/jsonp chunk loading","webpack://dapp-robonomics.network/webpack/startup"],"sourcesContent":["<template>\n  <main-layout v-if=\"isReady\" :title=\"title\">\n    <router-view />\n  </main-layout>\n</template>\n\n<script>\nimport MainLayout from \"@/components/layouts/Main.vue\";\nimport dayjs from \"dayjs\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  name: \"App\",\n  inject: [\"RobonomicsProvider\", \"IpfsProvider\"],\n  components: {\n    MainLayout\n  },\n  data() {\n    return {\n      isReady: this.RobonomicsProvider.isReady,\n      title: \"\"\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    $route: {\n      handler: function (route) {\n        this.title = route?.meta?.title;\n        document.title = this.title\n          ? `${this.title} – Robonomics Network dApp`\n          : \"Robonomics Network dApp\";\n      },\n      deep: true,\n      immediate: true\n    },\n    isReady: {\n      handler: async function (v) {\n        if (v) {\n          this.init();\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    this.$store.commit(\"rws/setKey\", process.env.VUE_APP_ROBONOMICS_UI_KEY);\n    this.$store.dispatch(\"rws/init\");\n\n    this.$store.commit(\n      \"rws/setLinkActivate\",\n      this.$router.resolve({ name: \"rwsActivate\" }).path\n    );\n    this.$store.commit(\n      \"rws/setLinkList\",\n      this.$router.resolve({ name: \"rwsSetupsList\" }).path\n    );\n    this.$store.commit(\n      \"rws/setLinkSetup\",\n      this.$router.resolve({ name: \"rwsSetup\" }).path\n    );\n    this.$store.commit(\n      \"rws/setLinkDevices\",\n      this.$router.resolve({ name: \"telemetry\" }).path\n    );\n    this.$store.commit(\n      \"rws/setLinkUsers\",\n      this.$router.resolve({ name: \"rwsUsersList\" }).path\n    );\n    this.$store.commit(\n      \"rws/setLinkUseractivate\",\n      this.$router.resolve({ name: \"rwsUserSetup\" }).path\n    );\n    this.$store.commit(\n      \"rws/setLinkHaSetup\",\n      this.$router.resolve({ name: \"haSetup\" }).path\n    );\n    this.$store.commit(\"ipfs/setGateways\", this.IpfsProvider.gateways);\n  },\n  methods: {\n    async init() {\n      if (\n        this.$store.state.robonomicsUIvue.rws.list &&\n        this.$store.state.robonomicsUIvue.rws.list.length > 0\n      ) {\n        const checkStatus = async (owner, enddate) => {\n          const now = dayjs().valueOf();\n          const end = Number(enddate);\n          if (now && end && end - now < 0) {\n            const dataRaw = await this.robonomics.rws.getLedger(owner);\n            if (!dataRaw.isEmpty) {\n              if (dataRaw.value === null) {\n                return \"\";\n              }\n              const issue_time = dataRaw.value.issueTime.toNumber();\n              let days = 0;\n              if (dataRaw.value.kind.isDaily) {\n                days = dataRaw.value.kind.value.days.toNumber();\n              }\n              const DAYS_TO_MS = 24 * 60 * 60 * 1000;\n              return issue_time + days * DAYS_TO_MS;\n            }\n          }\n          return enddate;\n        };\n\n        const arr = [];\n        for (const item of this.$store.state.robonomicsUIvue.rws.list) {\n          arr.push({\n            ...item,\n            enddate: await checkStatus(item.owner, item.enddate)\n          });\n        }\n        this.$store.dispatch(\"rws/rewrite\", arr);\n      }\n    }\n  }\n};\n</script>\n","<template>\n  <robo-layout-header\n    logoIcon=\"images/logo-white.png\"\n    :navigation=\"navigation\"\n    :title=\"title\"\n    :version=\"version\"\n  />\n</template>\n\n<script>\nimport { fromUnit, round } from \"@/utils/tools\";\nimport axios from \"axios\";\nimport { toRaw } from \"vue\";\n\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Robonomics Dapp\"\n    }\n  },\n  inject: [\"RobonomicsProvider\"],\n  data() {\n    return {\n      navigation: [\n        {\n          title: \"Other\",\n          links: [\n            {\n              title: \"Services\",\n              link: this.$router.resolve({ name: \"services\" }).path,\n              type: \"router\"\n            }\n          ]\n        },\n\n        {\n          title: \"Tokenomics\",\n          links: [\n            {\n              title: \"Uniswap\",\n              link: \"https://app.uniswap.org/#/swap?inputCurrency=0x7de91b204c1c737bcee6f000aaa6569cf7061cb7&outputCurrency=0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n              type: \"external\"\n            },\n            {\n              title: \"About XRT\",\n              link: \"https://robonomics.network/xrt/\",\n              type: \"external\"\n            }\n          ]\n        },\n\n        {\n          title: \"Tools\",\n          links: [\n            {\n              title: \"Substrate Portal\",\n              link: \"https://polkadot.js.org/apps/?rpc=wss%3A%2F%2Fkusama.rpc.robonomics.network%2F#/explorer\",\n              type: \"external\"\n            },\n            {\n              title: \"Subscan\",\n              link: \"https://robonomics.subscan.io/\",\n              type: \"external\"\n            },\n            {\n              title: \"Polkassembly\",\n              link: \"https://robonomics.polkassembly.io/\",\n              type: \"external\"\n            }\n          ]\n        },\n\n        {\n          title: \"Kusama XCM\",\n          links: [\n            {\n              title: \"Moonriver\",\n              link: \"https://apps.moonbeam.network/moonriver\",\n              type: \"external\"\n            },\n            {\n              title: \"Solarbeam\",\n              link: \"https://analytics.solarbeam.io/pairs/0x5261e0ce96289e6c3a16da45a2e52d1ab1a0e9c3\",\n              type: \"external\"\n            }\n          ]\n        }\n      ],\n      version: \" \"\n    };\n  },\n  computed: {\n    robonomics: function () {\n      return toRaw(this.RobonomicsProvider.instance.value);\n    }\n  },\n  watch: {\n    \"$store.state.robonomicsUIvue.polkadot.extensionObj\": function (value) {\n      if (\n        value.signer &&\n        value.signer.signRaw &&\n        this.$store.state.robonomicsUIvue.polkadot.address\n      ) {\n        this.handlerAccount(this.$store.state.robonomicsUIvue.polkadot.address);\n      }\n    },\n    \"$store.state.robonomicsUIvue.polkadot.address\": {\n      handler: function (value) {\n        if (\n          value &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer &&\n          this.$store.state.robonomicsUIvue.polkadot.extensionObj.signer.signRaw\n        ) {\n          this.handlerAccount(value);\n        }\n      },\n      immediate: true\n    }\n  },\n  async created() {\n    try {\n      const res = await axios.get(\n        \"https://api.github.com/repos/airalab/dapp.robonomics.network/releases/latest\"\n      );\n      if (res.data.tag_name) {\n        this.version = res.data.tag_name;\n      }\n    } catch (_) {\n      console.log(\"dApp version not found.\");\n    }\n  },\n  methods: {\n    async handlerAccount(address) {\n      if (this.unsubscribeBalance) {\n        this.unsubscribeBalance();\n      }\n      const account = this.$store.state.robonomicsUIvue.polkadot.accounts.find(\n        (item) => item.address === address\n      );\n      if (!account) {\n        return;\n      }\n      await this.robonomics.accountManager.setSender(address, {\n        type: account.type,\n        extension: this.$store.state.robonomicsUIvue.polkadot.extensionObj\n      });\n      this.unsubscribeBalance = await this.robonomics.account.getBalance(\n        address,\n        (r) => {\n          const transferable = r.free.sub(r.feeFrozen);\n          this.$store.commit(\n            \"polkadot/setBalanceXRT\",\n            round(\n              fromUnit(\n                transferable,\n                this.robonomics.api.registry.chainDecimals[0]\n              ),\n              4\n            )\n          );\n        }\n      );\n    }\n  }\n};\n</script>\n","import Decimal from \"decimal.js-light\";\n\nDecimal.set({\n  toExpNeg: -31,\n  toExpPos: 31\n});\n\nexport function toDecimal(v) {\n  return new Decimal(v.toString());\n}\n\nexport function round(v, place) {\n  return toDecimal(v).todp(place);\n}\n\nexport function fromUnit(v, decimals = 0, dp) {\n  return toDecimal(v)\n    .div(new Decimal(10).pow(decimals.toString()))\n    .todp(dp)\n    .toString();\n}\n\nexport function toUnit(v, decimals = 0) {\n  return toDecimal(v).mul(new Decimal(10).pow(decimals.toString())).toString();\n}\n","import { render } from \"./Header.vue?vue&type=template&id=1bd5ea9e\"\nimport script from \"./Header.vue?vue&type=script&lang=js\"\nexport * from \"./Header.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./Main.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Main.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=349622bb\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// import { Buffer } from \"buffer\";\nimport axios from \"axios\";\nimport { create } from \"ipfs-http-client\";\nimport { ref } from \"vue\";\n\nclass IpfsApiClient {\n  constructor(endpoint) {\n    this.endpoint = endpoint;\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  _create() {\n    this.client = create({\n      ...this._options()\n    });\n  }\n  _options() {\n    return {\n      url: this.endpoint,\n      headers: {\n        authorization: `Basic ${this.authHeader}`,\n        robonomics: this.robonomics\n      }\n    };\n  }\n  isAuth() {\n    return !!this.authHeader && !!this.robonomics;\n  }\n  auth(owner, address, signature) {\n    const authHeaderRaw = `sub-${address}:${signature}`;\n    this.authHeader = Buffer.from(authHeaderRaw).toString(\"base64\");\n    this.robonomics = owner;\n    this._create();\n  }\n  authClear() {\n    this.authHeader = null;\n    this.robonomics = null;\n    this._create();\n  }\n  async ls(cid) {\n    const files = [];\n    for await (const file of this.client.ls(cid)) {\n      if (file.type === \"file\") {\n        files.push(file);\n      }\n    }\n    return files;\n  }\n  async cat(cid) {\n    const cat = async (cid) => {\n      const decoder = new TextDecoder();\n      let content = \"\";\n      for await (const chunk of this.client.cat(cid)) {\n        content += decoder.decode(chunk, {\n          stream: true\n        });\n      }\n      return content;\n    };\n    return await cat(cid);\n  }\n  async add(data) {\n    return await this.client.add(data);\n  }\n  async catViaGateway(gateway, cid, attempts = 5) {\n    for (let index = 1; index <= attempts; index++) {\n      try {\n        return (await axios.get(`${gateway}${cid}`)).data;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n  async catViaGateways(gateways, cid) {\n    for (const gateway of gateways) {\n      try {\n        return {\n          gateway,\n          result: await this.catViaGateway(gateway, cid)\n        };\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n    throw new Error(\"File not available\");\n  }\n}\n\nexport default {\n  install: (app, params) => {\n    const instance = ref();\n    app.provide(\"IpfsProvider\", {\n      instance,\n      gateways: params.gateways || []\n    });\n    instance.value = new IpfsApiClient(params.api.gateway);\n  }\n};\n","import { u8aToHex, u8aWrapBytes } from \"@polkadot/util\";\nimport { AccountManager } from \"robonomics-interface\";\n\nexport default class AccountManagerDapp extends AccountManager {\n  constructor(keyring, config = {}, api = null) {\n    super(keyring, api);\n    this.extension = null;\n    keyring.loadAll(config);\n    this.setReady(true);\n  }\n\n  async beforeSetSender(address, { type, extension }) {\n    this.extension = extension;\n    try {\n      this.keyring.getPair(address);\n      // eslint-disable-next-line no-empty\n    } catch (_) {\n      this.keyring.loadInjected(address, {}, type);\n    }\n  }\n\n  async afterSetSender() {\n    if (this.account.meta.isInjected && this.extension) {\n      this.api.setSigner(this.extension.signer);\n      this.account.signMsg = async (data) => {\n        return (\n          await this.extension.signer.signRaw({\n            address: this.account.address,\n            data: u8aToHex(u8aWrapBytes(data)),\n            type: \"bytes\"\n          })\n        ).signature;\n      };\n    }\n  }\n}\n","import keyring from \"@polkadot/ui-keyring\";\nimport { Robonomics } from \"robonomics-interface\";\nimport { reactive, ref, toRaw } from \"vue\";\nimport AccountManager from \"./robonomicsAccountManager\";\n\nexport default {\n  install: async (app, params) => {\n    const isReady = ref(false);\n    const instance = reactive({ value: undefined });\n    app.provide(\"RobonomicsProvider\", {\n      isReady,\n      instance\n    });\n    instance.value = await Robonomics.createInstance(params);\n    toRaw(instance).value.setAccountManager(new AccountManager(keyring));\n    isReady.value = true;\n  }\n};\n","<template>\n  <robo-layout-section>\n    <robo-grid\n      offset=\"x0\"\n      gap=\"x1\"\n      valign=\"start\"\n      galign=\"start\"\n      minColumnWidth=\"550px\"\n      maxColumnWidth=\"1fr\"\n    >\n      <!-- {\n                  src: 'https://static.robonomics.network/dapp/Robonomics-smart-home-intro.webm',\n                  type: 'video/webm'\n                },\n                {\n                  src: 'https://static.robonomics.network/dapp/Robonomics-smart-home-intro.mp4',\n                  type: 'video/mp4'\n                } -->\n\n      <robo-video\n        autoplay\n        loop\n        :sources=\"[\n          {\n            src: 'https://crustipfs.art/ipfs/QmStCDsEHCYwVYvnDdmZBMnobPmrgZx3iJLm65b8XNzKQa',\n            type: 'video/mp4'\n          }\n        ]\"\n        script=\"<p>Robonomics is a decentralized cloud service that can be used to enhance\n                your smart home system. It addresses two main problems: the lack of\n                control over data shared with vendors or third parties, and the vulnerability of\n                smart homes to centralized cloud server shutdowns.</p>\n                <p>With Robonomics, you can take advantage of its secure,\n                  serverless, and decentralized cloud service to improve the functionality of\n                  your smart home. Plus, you can use it with a wide range of Zigbee smart devices\n                  to automate and control various aspects of your home.</p>\n                <p>Installing Robonomics on top of Home Assistant is easy, and there are\n                   several options to choose from. Simply select the method that works best for you\n                   and your smart home on wiki.robonomics.network.</p>\"\n      />\n\n      <robo-grid-item align=\"stretch\">\n        <robo-grid\n          offset=\"x0\"\n          gap=\"x1\"\n          minColumnWidth=\"270px\"\n          maxColumnWidth=\"1fr\"\n        >\n          <robo-card fixedButton>\n            <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n              <robo-icon icon=\"current-version\" size=\"big\" />\n              <div>\n                <robo-text title=\"4\">Your RWS subscriptions</robo-text>\n              </div>\n            </robo-grid>\n            <robo-button :router=\"store.state.robonomicsUIvue.rws.links.list\">\n              View details\n            </robo-button>\n          </robo-card>\n\n          <robo-card :pale=\"rws?.length < 1\" fixedButton>\n            <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n              <robo-icon icon=\"plug\" size=\"big\" />\n              <div>\n                <robo-text title=\"4\">Control smart devices</robo-text>\n              </div>\n            </robo-grid>\n            <robo-button\n              :router=\"store.state.robonomicsUIvue.rws.links.devices\"\n              :disabled=\"rws?.length < 1\"\n            >\n              Manage devices\n            </robo-button>\n          </robo-card>\n\n          <robo-card :pale=\"rws?.length < 1\" fixedButton>\n            <robo-grid offset=\"x0\" gap=\"x05\" valign=\"start\">\n              <robo-icon icon=\"user-group\" size=\"big\" />\n              <div>\n                <robo-text title=\"4\">Share your telemetry</robo-text>\n              </div>\n            </robo-grid>\n            <robo-button\n              :router=\"store.state.robonomicsUIvue.rws.links.users\"\n              :disabled=\"rws?.length < 1\"\n            >\n              Manage Users\n            </robo-button>\n          </robo-card>\n\n          <robo-card>\n            <robo-text title=\"4\" offset=\"x0\">Need help?</robo-text>\n            <robo-grid gap=\"x05\" offset=\"x1\">\n              <robo-text size=\"small\" weight=\"bold\">\n                <robo-link href=\"https://wiki.robonomics.network\">\n                  Wiki\n                </robo-link>\n                - Tutorials\n              </robo-text>\n              <robo-text size=\"small\" weight=\"bold\">\n                <robo-link\n                  href=\"https://github.com/airalab/dapp.robonomics.network\"\n                >\n                  Github</robo-link\n                >\n                - Bugs & improvements\n              </robo-text>\n              <robo-text size=\"small\" weight=\"bold\">\n                <robo-link href=\"https://discord.gg/JpaN2XAmqY\">\n                  Discord\n                </robo-link>\n                - Team support\n              </robo-text>\n            </robo-grid>\n          </robo-card>\n        </robo-grid>\n      </robo-grid-item>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\n// /* + get rws */\nconst store = useStore();\nconst rws = computed(() => {\n  return store.state.robonomicsUIvue.rws.list;\n});\n/* - get rws */\n</script>\n","import script from \"./Home.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Home.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script>\nexport default {\n  created: function () {\n    window.location.href = `https://v0.dapp.robonomics.network/${this.$route.href}`;\n  }\n};\n</script>\n","import script from \"./PathNotFound.vue?vue&type=script&lang=js\"\nexport * from \"./PathNotFound.vue?vue&type=script&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-template-rws-activate\n      :price=\"price\"\n      activationtime=\"2\"\n      :available=\"freeAuctions\"\n      @on-activate=\"onActivate\"\n      :rwsStatus=\"status\"\n      :rwsMessage=\"message\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useAccount } from \"@/hooks/useAccount\";\nimport { useBalance } from \"@/hooks/useBalance\";\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { fromUnit } from \"@/utils/tools\";\nimport { bnToBn } from \"@polkadot/util\";\nimport { computed, onUnmounted, ref, watch, watchEffect } from \"vue\";\n\nexport default {\n  setup() {\n    const price = ref(0);\n    const freeAuctions = ref(0);\n    const status = ref(\"new\");\n    const message = ref(\"\");\n    let unsubscribeBlock = null;\n\n    const robonomics = useRobonomics();\n    const { account, unsubscribe: unsubscribeAccount } = useAccount();\n    const { balance, unsubscribe: unsubscribeBalance } = useBalance(account);\n    const subscription = useSubscription(account);\n    const devices = useDevices(account);\n\n    watch(\n      [subscription.hasSubscription, subscription.isActive, account],\n      () => {\n        if (subscription.hasSubscription.value) {\n          if (subscription.isActive.value) {\n            status.value = \"ok\";\n            message.value = \"You already have subsription\";\n          } else {\n            status.value = \"renew\";\n            message.value = \"\";\n          }\n        } else {\n          status.value = \"new\";\n          message.value = \"\";\n        }\n      }\n    );\n\n    (async () => {\n      freeAuctions.value = (await robonomics.rws.getFreeAuctions()).length;\n      unsubscribeBlock = await robonomics.events.onBlock(async () => {\n        freeAuctions.value = (await robonomics.rws.getFreeAuctions()).length;\n      });\n\n      const minimalBid = await robonomics.rws.getMinimalBid();\n      price.value = minimalBid.add(bnToBn(1));\n    })();\n\n    onUnmounted(() => {\n      if (unsubscribeBlock) {\n        unsubscribeBlock();\n      }\n      if (unsubscribeBalance) {\n        unsubscribeBalance();\n      }\n      unsubscribeAccount();\n    });\n\n    const transaction = useSend();\n    const onActivate = async () => {\n      const oldStatus = status.value;\n      status.value = \"processing\";\n      message.value = \"\";\n      if (\n        !balance.value ||\n        bnToBn(balance.value).add(bnToBn(1000000000)).lt(price.value)\n      ) {\n        status.value = \"error\";\n        message.value =\n          \"Subscription can not be activated due to unsuffcicient XRT balance\";\n        return;\n      }\n      if (freeAuctions.value <= 0) {\n        status.value = \"error\";\n        message.value = \"There are no available subscriptions\";\n        return;\n      }\n      if (subscription.hasSubscription.value && subscription.isActive.value) {\n        status.value = \"error\";\n        message.value = \"You have an active subscription\";\n        return;\n      }\n\n      let call = robonomics.rws.bid(\n        Number(await robonomics.rws.getFirtsFreeAuction()),\n        price.value\n      );\n      if (!devices.devices.value.includes(account.value)) {\n        call = robonomics.api.tx.utility.batch([\n          call,\n          robonomics.rws.setDevices([...devices.devices.value, account.value])\n        ]);\n      }\n      const tx = transaction.createTx();\n      await transaction.send(tx, call);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          status.value = \"error\";\n          message.value = tx.error.value;\n        } else {\n          status.value = oldStatus;\n        }\n        return;\n      }\n\n      const unsubscribeBlock = await robonomics.events.onBlock(() => {\n        subscription.loadLedger();\n      });\n      const stopWatchEffect = watchEffect(() => {\n        if (subscription.hasSubscription.value && subscription.isActive.value) {\n          stopWatchEffect();\n          unsubscribeBlock();\n          status.value = \"ok\";\n        }\n      });\n    };\n\n    const priceFormat = computed(() => {\n      return fromUnit(price.value, robonomics.api.registry.chainDecimals[0]);\n    });\n\n    return {\n      freeAuctions,\n      price: priceFormat,\n      status,\n      message,\n      onActivate\n    };\n  }\n};\n</script>\n","import { inject, toRaw } from \"vue\";\n\nexport function useRobonomics() {\n  const { instance } = inject(\"RobonomicsProvider\");\n  return toRaw(instance).value;\n}\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useAccount = () => {\n  const account = ref(null);\n  const robonomics = useRobonomics();\n  if (robonomics.accountManager.account) {\n    account.value = robonomics.accountManager.account.address;\n  }\n  const unsubscribe = robonomics.accountManager.onChange((res) => {\n    account.value = res.address;\n  });\n  return { account, unsubscribe };\n};\n","import { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useBalance = (account) => {\n  const balance = ref(null);\n  const robonomics = useRobonomics();\n  let unsubscribe;\n  watch(account, async () => {\n    if (unsubscribe) {\n      unsubscribe();\n    }\n    unsubscribe = await robonomics.account.getBalance(account.value, (r) => {\n      balance.value = r.free.sub(r.feeFrozen).toNumber();\n    });\n  });\n  return { balance, unsubscribe };\n};\n","import { validateAddress } from \"@polkadot/util-crypto\";\nimport { ref, watch } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useDevices = (initialOwner = null) => {\n  const robonomics = useRobonomics();\n  const owner = ref(initialOwner);\n  const devices = ref([]);\n\n  const loadDevices = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const result = await robonomics.rws.getDevices(owner.value);\n        devices.value = result.map((item) => {\n          return item.toHuman();\n        });\n        return;\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    devices.value = [];\n  };\n  watch(\n    owner,\n    async () => {\n      await loadDevices();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    devices,\n    loadDevices\n  };\n};\n","import { validateAddress } from \"@polkadot/util-crypto\";\nimport { computed, reactive, ref, toRaw, watch } from \"vue\";\nimport { useDevices } from \"./useDevices\";\nimport { useRobonomics } from \"./useRobonomics\";\n\nexport const useSubscription = (initialOwner = null) => {\n  const owner = ref(initialOwner);\n  const dataRaw = reactive({ value: null });\n\n  const robonomics = useRobonomics();\n  const { devices, loadDevices } = useDevices(owner);\n\n  const getReferenceCallWeight = () => {\n    return robonomics.api.consts.rws.referenceCallWeight;\n  };\n\n  const getLedger = async (owner) => {\n    const res = await robonomics.rws.getLedger(owner);\n    if (!res.isEmpty) {\n      return res.value;\n    }\n    return;\n  };\n\n  const DAYS_TO_MS = 24 * 60 * 60 * 1000;\n\n  const getFreeWeightCalc = async (owner) => {\n    const ledger = await getLedger(owner);\n    if (!ledger) {\n      return -1;\n    }\n\n    const freeWeight = ledger.freeWeight.toNumber();\n    const lastUpdate = ledger.lastUpdate.toNumber();\n    const issueTime = ledger.issueTime.toNumber();\n\n    const referenceCallWeight = getReferenceCallWeight();\n    const now = Date.now();\n\n    let utps = (() => {\n      let tps;\n      if (ledger.kind.isLifetime) {\n        tps = ledger.kind.value.tps.toNumber();\n      } else {\n        const days = ledger.kind.value.days.toNumber();\n        const duration_ms = days * DAYS_TO_MS;\n        if (now < issueTime + duration_ms) {\n          tps = 10000;\n        } else {\n          tps = 0;\n        }\n      }\n      return tps;\n    })();\n\n    const delta = now - lastUpdate;\n    return Math.floor(\n      freeWeight + (referenceCallWeight * utps * delta) / 1000000000\n    );\n  };\n\n  const validUntil = computed(() => {\n    if (dataRaw.value === null) {\n      return \"\";\n    }\n    const dataRawObject = toRaw(dataRaw);\n    if (dataRawObject.value.kind.isLifetime) {\n      return null;\n    }\n    const issue_time = dataRawObject.value.issueTime.toNumber();\n    let days = 0;\n    if (dataRawObject.value.kind.isDaily) {\n      days = dataRawObject.value.kind.value.days.toNumber();\n    }\n    return issue_time + days * DAYS_TO_MS;\n  });\n\n  const countMonth = computed(() => {\n    if (dataRaw.value === null) {\n      return 0;\n    }\n    const dataRawObject = toRaw(dataRaw);\n    let days = 0;\n    if (dataRawObject.value.kind.isDaily) {\n      days = dataRawObject.value.kind.value.days.toNumber();\n    }\n    return days / 30;\n  });\n\n  const isActive = computed(() => {\n    if (\n      dataRaw.value === null ||\n      (validUntil.value !== null && Date.now() > validUntil.value)\n    ) {\n      return false;\n    }\n    return true;\n  });\n\n  const hasSubscription = computed(() => {\n    return dataRaw.value !== null;\n  });\n\n  const loadLedger = async () => {\n    if (owner.value) {\n      try {\n        validateAddress(owner.value);\n        const ledger = await getLedger(owner.value);\n        if (ledger) {\n          dataRaw.value = ledger;\n          return;\n        }\n        // eslint-disable-next-line no-empty\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    dataRaw.value = null;\n  };\n\n  watch(\n    owner,\n    async () => {\n      await loadLedger();\n    },\n    {\n      immediate: true\n    }\n  );\n\n  return {\n    owner,\n    dataRaw,\n    hasSubscription,\n    isActive,\n    countMonth,\n    validUntil,\n    loadLedger,\n    devices,\n    loadDevices,\n    getFreeWeightCalc\n  };\n};\n","import { ref } from \"vue\";\nimport { useRobonomics } from \"./useRobonomics\";\nimport { useSubscription } from \"./useSubscription\";\n\nexport const useSend = () => {\n  const robonomics = useRobonomics();\n  const { getFreeWeightCalc } = useSubscription();\n\n  const getCallWeight = async (tx, signer) => {\n    if (!signer) {\n      if (robonomics.accountManager.account) {\n        signer = robonomics.accountManager.account.address;\n      } else {\n        throw new Error(\"Signer required\");\n      }\n    }\n    return (await tx.paymentInfo(signer)).weight.toNumber();\n  };\n\n  const checkWeight = async (tx, owner) => {\n    const freeWeightCalc = await getFreeWeightCalc(owner);\n    if (freeWeightCalc < 0) {\n      throw new Error(`Not found ledger ${owner}`);\n    }\n    const callWeight = await getCallWeight(tx);\n    if (callWeight > freeWeightCalc) {\n      throw new Error(\n        `The origin account have no enough free weight to process these call. Call weight ${callWeight}, Free weight ${freeWeightCalc}`\n      );\n    }\n  };\n\n  const createTx = () => {\n    const result = ref(null);\n    const error = ref(null);\n    const process = ref(false);\n    return { error, process, result };\n  };\n\n  const send = async (tx, call, subscription = false) => {\n    tx.result.value = null;\n    tx.error.value = null;\n    tx.process.value = true;\n    try {\n      if (subscription) {\n        await checkWeight(call, subscription);\n        robonomics.accountManager.useSubscription(subscription);\n      }\n      const nonce = await robonomics.api.rpc.system.accountNextIndex(\n        robonomics.accountManager.account.address\n      );\n      tx.result.value = await robonomics.accountManager.signAndSend(call, {\n        nonce\n      });\n      console.log(\"tx\", tx.result.value.block, tx.result.value.tx);\n    } catch (e) {\n      console.log(e);\n      tx.error.value = e.message;\n    }\n    tx.process.value = false;\n    if (subscription) {\n      robonomics.accountManager.useSubscription(false);\n    }\n    return tx.result;\n  };\n\n  return { createTx, send };\n};\n","import { render } from \"./RwsActivate.vue?vue&type=template&id=4ed1b626\"\nimport script from \"./RwsActivate.vue?vue&type=script&lang=js\"\nexport * from \"./RwsActivate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section rwsrecover>\n    <robo-template-rws-setup\n      v-model:owner=\"ownerNew\"\n      v-model:controller=\"controllerNew\"\n      v-model:scontroller=\"scontrollerNew\"\n      v-model:name=\"nameNew\"\n      v-model:enddate=\"enddateNew\"\n      @on-rws-setup=\"onSetup\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useSubscription } from \"@/hooks/useSubscription\";\nimport { ref } from \"vue\";\n\nexport default {\n  setup() {\n    const ownerNew = ref(null);\n    const controllerNew = ref(null);\n    const scontrollerNew = ref(null);\n    const nameNew = ref(null);\n\n    const subscription = useSubscription(ownerNew);\n\n    const onSetup = (rwsStatus) => {\n      rwsStatus(\"ok\");\n    };\n\n    return {\n      ownerNew,\n      controllerNew,\n      scontrollerNew,\n      nameNew,\n      enddateNew: subscription.validUntil,\n      onSetup\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetup.vue?vue&type=template&id=3f7acb8c\"\nimport script from \"./RwsSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section v-if=\"rws?.length < 1\" rwsrecover>\n    <robo-section width=\"narrow\" gcenter>\n      <robo-template-rws-setups-empty />\n    </robo-section>\n  </robo-layout-section>\n\n  <robo-layout-section v-else rwsrecover rwssave>\n    <robo-section offset=\"x0\" width=\"narrow\">\n      <robo-grid offset=\"x1\" gap=\"x1\">\n        <robo-template-rws-setup-listitem\n          v-for=\"(setup, index) in rws\"\n          :key=\"index\"\n          v-model:owner=\"setup.owner\"\n          v-model:controller=\"setup.controller\"\n          v-model:scontroller=\"setup.scontroller\"\n          v-model:name=\"setup.name\"\n          v-model:enddate=\"setup.enddate\"\n          :onEdit=\"onEdit\"\n          @on-rws-delete=\"onDelete\"\n        />\n      </robo-grid>\n      <robo-button block :router=\"store.state.robonomicsUIvue.rws.links.setup\">\n        + Add new rws\n      </robo-button>\n    </robo-section>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { computed } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    const store = useStore();\n\n    const rws = computed(() => {\n      return store.state.robonomicsUIvue.rws.list;\n    });\n\n    let onEdit = (setStatus) => {\n      setStatus(\"ok\");\n    };\n\n    let onDelete = (setStatus) => {\n      setStatus(\"ok\");\n    };\n\n    return {\n      store,\n      rws,\n      onEdit,\n      onDelete\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsSetupsList.vue?vue&type=template&id=682e725d\"\nimport script from \"./RwsSetupsList.vue?vue&type=script&lang=js\"\nexport * from \"./RwsSetupsList.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section rwsrecover>\n    <robo-template-rws-user-setup\n      v-model:address=\"addressNew\"\n      v-model:name=\"nameNew\"\n      @on-user-setup=\"onSetup\"\n    />\n  </robo-layout-section>\n</template>\n\n<script>\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  setup() {\n    let addressNew = ref(null);\n    let nameNew = ref(null);\n    const store = useStore();\n    let owner = ref(store.state.robonomicsUIvue.rws.active);\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.active,\n      () => {\n        owner.value = store.state.robonomicsUIvue.rws.active;\n      }\n    );\n\n    const robonomics = useRobonomics();\n    const transaction = useSend();\n    const devices = useDevices(owner);\n\n    const onSetup = async (setStatus) => {\n      if (\n        owner.value &&\n        owner.value !== store.state.robonomicsUIvue.polkadot.address\n      ) {\n        setStatus(\"error\", \"You do not have access to this action.\");\n        return;\n      }\n\n      if (!devices.devices.value.includes(addressNew.value)) {\n        const call = await robonomics.rws.setDevices([\n          ...devices.devices.value,\n          addressNew.value\n        ]);\n        const tx = transaction.createTx();\n        if (\n          devices.devices.value.includes(\n            store.state.robonomicsUIvue.polkadot.address\n          )\n        ) {\n          await transaction.send(tx, call, owner.value);\n        } else {\n          await transaction.send(tx, call);\n        }\n        if (tx.error.value) {\n          if (tx.error.value !== \"Cancelled\") {\n            setStatus(\"error\", tx.error.value);\n          } else {\n            setStatus(\"calcel\");\n          }\n          return;\n        }\n      }\n      setStatus(\"ok\");\n    };\n\n    return {\n      addressNew,\n      nameNew,\n      onSetup\n    };\n  }\n};\n</script>\n","import { render } from \"./RwsUserSetup.vue?vue&type=template&id=51e9d9a3\"\nimport script from \"./RwsUserSetup.vue?vue&type=script&lang=js\"\nexport * from \"./RwsUserSetup.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section v-if=\"rws?.length < 1 || !users || users.length < 1\">\n    <robo-section width=\"narrow\" gcenter>\n      <robo-template-rws-users-empty />\n    </robo-section>\n  </robo-layout-section>\n\n  <robo-layout-section v-else rwssave>\n    <robo-section offset=\"x0\" width=\"narrow\">\n      <robo-grid offset=\"x1\" gap=\"x1\">\n        <robo-template-rws-user-listitem\n          v-for=\"(user, index) in users\"\n          :key=\"index\"\n          :owner=\"rwsactive\"\n          v-model:address=\"user.address\"\n          v-model:name=\"user.name\"\n          :onEdit=\"onEdit\"\n          @onUserDelete=\"(setStatus) => onDelete(user.address, setStatus)\"\n        />\n      </robo-grid>\n      <robo-button\n        block\n        :router=\"store.state.robonomicsUIvue.rws.links.useractivate\"\n      >\n        + Add user\n      </robo-button>\n    </robo-section>\n  </robo-layout-section>\n</template>\n\n<script setup>\nimport { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { computed, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nconst store = useStore();\n\nconst rws = computed(() => {\n  return store.state.robonomicsUIvue.rws.list;\n});\n\nconst rwsactive = computed(() => {\n  return store.state.robonomicsUIvue.rws.active;\n});\n\nconst users = computed(() => {\n  try {\n    return store.getters[\"rws/users\"];\n  } catch (error) {\n    return [];\n  }\n});\n\nconst onEdit = (setStatus) => {\n  setStatus(\"ok\");\n};\n\nconst robonomics = useRobonomics();\nconst transaction = useSend();\nconst devices = useDevices(rwsactive);\n\nconst onDelete = async (address, setStatus) => {\n  if (\n    rwsactive.value &&\n    rwsactive.value !== store.state.robonomicsUIvue.polkadot.address\n  ) {\n    setStatus(\"error\", \"You do not have access to this action.\");\n    return;\n  }\n\n  if (devices.devices.value.includes(address)) {\n    const newListDevices = devices.devices.value.filter((item) => {\n      return item !== address;\n    });\n    const call = await robonomics.rws.setDevices(newListDevices);\n    const tx = transaction.createTx();\n    if (\n      devices.devices.value.includes(\n        store.state.robonomicsUIvue.polkadot.address\n      )\n    ) {\n      await transaction.send(tx, call, rwsactive.value);\n    } else {\n      await transaction.send(tx, call);\n    }\n    if (tx.error.value) {\n      if (tx.error.value !== \"Cancelled\") {\n        setStatus(\"error\", tx.error.value);\n      } else {\n        setStatus(\"calcel\");\n      }\n      return;\n    }\n    await devices.loadDevices();\n  }\n  setStatus(\"ok\");\n};\n\nconst fillStorage = () => {\n  for (const address of devices.devices.value) {\n    if (\n      !users.value.find((item) => {\n        return item.address === address;\n      })\n    ) {\n      store.dispatch(\"rws/addUser\", {\n        rws: devices.owner.value,\n        user: {\n          address: address,\n          name: address === devices.owner.value ? \"owner\" : \"\"\n        }\n      });\n    }\n  }\n  for (const item of users.value) {\n    if (\n      !devices.devices.value.find((address) => {\n        return item.address === address;\n      })\n    ) {\n      store.dispatch(\"rws/deleteUser\", {\n        rws: devices.owner.value,\n        user: item.address\n      });\n    }\n  }\n};\nwatch(devices.devices, fillStorage);\n</script>\n","import script from \"./RwsUsersList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./RwsUsersList.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-grid offset=\"x0\" gap=\"x1\" galign=\"start\" minColumnWidth=\"450px\">\n      <robo-card>\n        <robo-link router=\"/telemetry\">\n          <robo-image src=\"images/services-ha.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link router=\"/telemetry\">Home assistant</robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Integrate Robonomics into your Home assistant dashboard and get\n          Parachain decentralized cloud service all over the word. Manipulate\n          your smart devices bypassing corporate clouds, manage user access\n          wherever you are. Backup your smart home data in blockchain.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://sensors.robonomics.network/#/\">\n          <robo-image src=\"images/services-sensors.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://sensors.robonomics.network/#/\">\n            Sensors Map\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          The decentralized opensource sensors map offers two distinct layers of\n          decentralization at your choise: peer-to-peer connectivity for direct\n          access to sensor data, and the federative concept for accumulating\n          sensor data and displaying measurement history. Anyone can assemble\n          your own sensor using components available on the free market.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://dapp.spot-sdk.education\">\n          <robo-image src=\"images/services-spot.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://dapp.spot-sdk.education\">\n            Boston Dynamics Spot SDK lessons\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Learn and practice with the Boston Dynamics Spot robot wherever you\n          are. After each lesson you will receive a captured video of the robot\n          movements and a printable PDF certificate.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://telescope.merklebot.com/#/\">\n          <robo-image src=\"images/services-telescope.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://telescope.merklebot.com/#/\">\n            An Autonomous Telescope Minting RMRK NFT's\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Connect to an autonomous telescope in the dark night of the Atacama\n          desert in Chile to capture an astronomical object and mint unique NFTs\n          in a few clicks.\n        </robo-text>\n      </robo-card>\n\n      <robo-card>\n        <robo-link href=\"https://dapp.ipci.io/#/offsetting\">\n          <robo-image src=\"images/services-offsetting.jpg\" />\n        </robo-link>\n        <robo-text title=\"3\">\n          <robo-link href=\"https://dapp.ipci.io/#/offsetting\">\n            Smart Building Offsetting\n          </robo-link>\n        </robo-text>\n        <robo-text size=\"small\">\n          Carbon footprint clearance for smart buildings based on geolocation\n          and energy consumption information.\n        </robo-text>\n      </robo-card>\n    </robo-grid>\n  </robo-layout-section>\n</template>\n","import { render } from \"./Services.vue?vue&type=template&id=7aac4d70\"\nconst script = {}\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-layout-section>\n    <robo-section mark=\"info\" offset=\"x0\" width=\"narrow\">\n      <robo-text offset=\"x0\">\n        You can create a password here to access your local Home Assistant\n        account, if you already have an RWS subscription or have been added as a\n        user to an RWS subscription.\n        <robo-link\n          href=\"https://wiki.robonomics.network/docs/global-administration#granting-access-to-user\"\n        >\n          More on Wiki\n        </robo-link>\n      </robo-text>\n    </robo-section>\n\n    <robo-section width=\"narrow\">\n      <form-check @check=\"handleCheck\" />\n      <form-create\n        :isCheсk=\"isCheсk\"\n        :ownerAddress=\"ownerAddress\"\n        :controllerAddress=\"controllerAddress\"\n        :userSeed=\"userSeed\"\n      />\n    </robo-section>\n\n    <robo-section\n      mark=\"info\"\n      marktitle=\"What's next\"\n      offset=\"x0\"\n      width=\"narrow\"\n    >\n      <robo-text offset=\"x0\">\n        <p>To open your local Home Assistant panel:</p>\n        <p>\n          1. Please enter in browser the following url:\n          http://YOUR_LOCAL_IP:8123\n        </p>\n        <p>2. Login: enter your user address</p>\n        <p>3. Password: enter password you created here</p>\n      </robo-text>\n    </robo-section>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { ref } from \"vue\";\nimport FormCheck from \"./FormCheck.vue\";\nimport FormCreate from \"./FormCreate.vue\";\n\nexport default {\n  components: { FormCheck, FormCreate },\n  setup() {\n    const isCheсk = ref(false);\n    const ownerAddress = ref(\"\");\n    const controllerAddress = ref(\"\");\n    const userSeed = ref(\"\");\n\n    const handleCheck = (data) => {\n      isCheсk.value = data.isCheсk;\n      ownerAddress.value = data.ownerAddress;\n      controllerAddress.value = data.controllerAddress;\n      userSeed.value = data.userSeed;\n    };\n\n    return {\n      isCheсk,\n      ownerAddress,\n      controllerAddress,\n      userSeed,\n\n      handleCheck\n    };\n  }\n};\n</script>\n","<template>\n  <form @submit.prevent=\"validate\">\n    <robo-grid offset=\"x0\" gap=\"x1\" columns=\"1\">\n      <robo-grid-item>\n        <robo-text title=\"3\" offset=\"x0\">User credits</robo-text>\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-template-rws-activeselect size=\"small\" block label=\"Choose RWS\" />\n      </robo-grid-item>\n\n      <robo-grid-item v-if=\"!hasRwsSetup\">\n        <robo-address-polkadot\n          v-model:address=\"controllerAddress\"\n          chain=\"32\"\n          label=\"Controller address\"\n        />\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-address-polkadot\n          v-model:address=\"address\"\n          chain=\"32\"\n          label=\"User address\"\n        />\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-input\n          label=\"User seed (12 words)\"\n          v-model=\"seed\"\n          type=\"password\"\n          tip=\"The seed phrase provided here is essential for encrypting your data. We understand the sensitivity of this information and therefore, do not share it with any third parties or store it on our servers. As an extra layer of security, we recommend avoiding storing a large number of tokens in this account to reduce the risk of potential unauthorized access.\"\n        />\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-button block>Check</robo-button>\n      </robo-grid-item>\n\n      <robo-grid-item v-if=\"warn\">\n        <robo-text highlight=\"attention\">\n          <template v-if=\"warn === 'user-exist'\">\n            Warn! The specified account address is already registered.\n          </template>\n        </robo-text>\n      </robo-grid-item>\n\n      <robo-grid-item v-if=\"error\">\n        <robo-text highlight=\"error\">\n          <template v-if=\"error === 'require'\">\n            Oops! Looks like you missed filling in some required fields. Please\n            fill in all required fields and try again.\n          </template>\n          <template v-if=\"error === 'not-user-subscription'\">\n            Oops! It seems like your address has not been added to the RWS\n            subscription.\n          </template>\n          <template v-if=\"error === 'bad-type'\">\n            Oops! Address should be ed25519 type\n          </template>\n          <template v-if=\"error === 'bad-seed'\">\n            Oops! Seed does not match user address.\n          </template>\n        </robo-text>\n      </robo-grid-item>\n    </robo-grid>\n  </form>\n</template>\n\n<script>\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { getLastDatalog } from \"@/utils/telemetry\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport { encodeAddress, validateAddress } from \"@polkadot/util-crypto\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  emits: [\"check\"],\n  setup(_, { emit }) {\n    const address = ref(\"\");\n    const seed = ref(\"\");\n    const error = ref(false);\n    const warn = ref(false);\n    const hasRwsSetup = ref(false);\n    const controllerAddress = ref(\"\");\n\n    const robonomics = useRobonomics();\n    const ipfs = useIpfs();\n\n    let ownerAddress;\n    const store = useStore();\n    watch(\n      () => store.state.robonomicsUIvue.rws.active,\n      async () => {\n        const controller = store.state.robonomicsUIvue.rws.list.find(\n          (item) => item.owner === store.state.robonomicsUIvue.rws.active\n        );\n        if (controller) {\n          ownerAddress = controller.owner;\n          controllerAddress.value = controller.controller;\n        } else {\n          ownerAddress = store.state.robonomicsUIvue.rws.active;\n        }\n      },\n      {\n        immediate: true\n      }\n    );\n    watch(\n      () => store.state.robonomicsUIvue.rws.list,\n      async () => {\n        hasRwsSetup.value = !!store.state.robonomicsUIvue.rws.list.length;\n      },\n      {\n        immediate: true\n      }\n    );\n\n    const validateRequired = () => {\n      if (seed.value && address.value && controllerAddress.value) {\n        return true;\n      }\n      return false;\n    };\n\n    const hasDeviceSubscription = async (owner, device) => {\n      try {\n        validateAddress(owner);\n        validateAddress(device);\n      } catch (_) {\n        return false;\n      }\n      const devices = await robonomics.rws.getDevices(owner);\n      if (!devices.isEmpty && devices.toHuman().includes(device)) {\n        return true;\n      }\n      return false;\n    };\n\n    const validateSeed = (type = \"ed25519\") => {\n      try {\n        const k = new Keyring();\n        const account = k.addFromUri(seed.value, {}, type);\n        if (encodeAddress(address.value) === encodeAddress(account.address)) {\n          return true;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n      return false;\n    };\n\n    const validate = async () => {\n      error.value = false;\n      warn.value = false;\n      if (!validateRequired()) {\n        error.value = \"require\";\n      } else if (validateSeed(\"sr25519\")) {\n        error.value = \"bad-type\";\n      } else if (!(await hasDeviceSubscription(ownerAddress, address.value))) {\n        error.value = \"not-user-subscription\";\n      } else if (!validateSeed()) {\n        error.value = \"bad-seed\";\n      } else {\n        const datalog = await getLastDatalog(\n          robonomics,\n          controllerAddress.value\n        );\n        const result = await ipfs.catViaGateway(\n          store.state.robonomicsUIvue.ipfs.activegateway,\n          datalog.cid,\n          5\n        );\n        if (result && result[address.value]) {\n          warn.value = \"user-exist\";\n        } else {\n          if (!result) {\n            console.log(\"Error: datalog not found in ipfs\");\n          }\n        }\n      }\n\n      if (error.value) {\n        emit(\"check\", {\n          isCheсk: false,\n          ownerAddress: \"\",\n          controllerAddress: \"\",\n          userSeed: \"\"\n        });\n      } else {\n        emit(\"check\", {\n          isCheсk: true,\n          ownerAddress,\n          controllerAddress: controllerAddress.value,\n          userSeed: seed.value\n        });\n      }\n    };\n\n    return {\n      hasRwsSetup,\n      controllerAddress,\n      address,\n      seed,\n      error,\n      warn,\n      validate\n    };\n  }\n};\n</script>\n","import { useAccount } from \"@/hooks/useAccount\";\nimport { inject, watch } from \"vue\";\n\nexport function useIpfs() {\n  const { account } = useAccount();\n  const { instance } = inject(\"IpfsProvider\");\n\n  watch(account, async () => {\n    if (instance.value) {\n      instance.value.authClear();\n    }\n  });\n\n  return instance.value;\n}\n","import { hexToU8a, u8aToString } from \"@polkadot/util\";\nimport { utils } from \"robonomics-interface\";\n\nconst clearJson = (string) => {\n  return string\n    .replaceAll(\"'\", '\"')\n    .replaceAll(\"\\\\\", \"\")\n    .replaceAll('\"\"', '\"')\n    .replaceAll(\"True\", \"true\")\n    .replaceAll(\"False\", \"false\")\n    .replaceAll(\"None\", '\"None\"');\n};\n\nexport const parseJson = (string) => {\n  try {\n    return JSON.parse(string);\n  } catch (error) {\n    console.log(\"error parse 1\");\n  }\n  try {\n    return JSON.parse(clearJson(string));\n  } catch (error) {\n    console.log(\"error parse 2\");\n    console.log(string);\n  }\n  return false;\n};\n\nexport const decryptMsg = (encryptMessage, pk, account) => {\n  const decryptMessage = account.decryptMessage(hexToU8a(encryptMessage), pk);\n  return u8aToString(decryptMessage);\n};\n\nexport const getLastDatalog = async (robonomics, controller) => {\n  console.log(\"getLastDatalog\");\n  if (!controller) {\n    return false;\n  }\n  const result = await robonomics.datalog.read(controller);\n  if (!result.length) {\n    return false;\n  }\n  const last = result[result.length - 1];\n  return { timestamp: last[0].toNumber(), cid: u8aToString(last[1]) };\n};\n\nexport const getConfigCid = async (robonomics, controller, twin_id) => {\n  console.log(\"getConfigCid\");\n  if (!controller || !twin_id) {\n    return false;\n  }\n  const twin = await robonomics.twin.getTwin(twin_id);\n  if (!twin) {\n    return false;\n  }\n  const configHex = Object.keys(twin).find((key) => twin[key] === controller);\n  return utils.hexToCid(configHex);\n};\n","import { render } from \"./FormCheck.vue?vue&type=template&id=204d1b82\"\nimport script from \"./FormCheck.vue?vue&type=script&lang=js\"\nexport * from \"./FormCheck.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <form @submit.prevent=\"createPassword\">\n    <robo-grid offset=\"x1\" gap=\"x1\" columns=\"1\" :disabled=\"!isCheсk\">\n      <robo-grid-item>\n        <robo-text title=\"3\" offset=\"x0\">New password</robo-text>\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-input label=\"New password\" v-model=\"password\" type=\"password\" />\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-input\n          label=\"Repeat password\"\n          v-model=\"passwordRepeat\"\n          type=\"password\"\n        />\n      </robo-grid-item>\n\n      <robo-grid-item>\n        <robo-button block :disabled=\"isDisabled\">Submit</robo-button>\n      </robo-grid-item>\n\n      <robo-grid-item v-if=\"error\">\n        <robo-text highlight=\"error\">\n          {{ error }}\n        </robo-text>\n      </robo-grid-item>\n    </robo-grid>\n  </form>\n</template>\n\n<script>\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport { u8aToHex } from \"@polkadot/util\";\nimport { decodeAddress } from \"@polkadot/util-crypto\";\nimport { computed, ref, toRefs, watch, watchEffect } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport default {\n  props: {\n    isCheсk: Boolean,\n    ownerAddress: String,\n    controllerAddress: String,\n    userSeed: String\n  },\n  setup(props) {\n    const { isCheсk, ownerAddress, controllerAddress, userSeed } =\n      toRefs(props);\n\n    const password = ref(\"\");\n    const passwordRepeat = ref(\"\");\n    const error = ref(\"\");\n\n    const robonomics = useRobonomics();\n    const transaction = useSend();\n    const store = useStore();\n\n    const tx = transaction.createTx();\n\n    let accountUser;\n    watch(\n      userSeed,\n      () => {\n        if (isCheсk.value) {\n          try {\n            const k = new Keyring({\n              ss58Format: robonomics.api?.registry.chainSS58\n            });\n            accountUser = k.addFromUri(userSeed.value, {}, \"ed25519\");\n            return;\n          } catch (error) {\n            console.log(error);\n          }\n        }\n        accountUser = null;\n      },\n      { immediate: true }\n    );\n\n    const encrypt = (password, address) => {\n      const decryptMessage = accountUser.encryptMessage(\n        password,\n        u8aToHex(decodeAddress(address))\n      );\n      return u8aToHex(decryptMessage);\n    };\n\n    let passwordForRecovery;\n    let passwordForAdmin;\n    watchEffect(() => {\n      if (\n        isCheсk.value &&\n        validateRequired.value &&\n        checkPasswordsMatch.value\n      ) {\n        passwordForRecovery = encrypt(password.value, accountUser.address);\n        passwordForAdmin = encrypt(password.value, controllerAddress.value);\n      } else {\n        passwordForRecovery = \"\";\n        passwordForAdmin = \"\";\n      }\n\n      console.log({ passwordForRecovery, passwordForAdmin });\n    });\n\n    const validateRequired = computed(() => {\n      if (password.value && passwordRepeat.value) {\n        return true;\n      }\n      return false;\n    });\n    const checkPasswordsMatch = computed(() => {\n      return password.value === passwordRepeat.value;\n    });\n    const isDisabled = computed(() => {\n      if (tx.process.value) {\n        console.log(\"process\");\n        return true;\n      }\n      if (!isCheсk.value) {\n        console.log(\"isCheсk\");\n        return true;\n      }\n      if (!validateRequired.value) {\n        console.log(\"validateRequire\");\n        return true;\n      }\n      if (!checkPasswordsMatch.value) {\n        console.log(\"checkPasswordsMatch\");\n        return true;\n      }\n      if (!passwordForAdmin || !passwordForRecovery) {\n        console.log(\"passwordForAdmin passwordForRecovery\");\n        return true;\n      }\n      return false;\n    });\n\n    const createPassword = async () => {\n      if (!isCheсk.value) {\n        return;\n      }\n\n      robonomics.accountManager.account = accountUser;\n\n      const call = await robonomics.datalog.write(\n        JSON.stringify({\n          subscription: ownerAddress.value,\n          ha: controllerAddress.value,\n          admin: passwordForAdmin,\n          user: passwordForRecovery\n        })\n      );\n      await transaction.send(tx, call, ownerAddress.value);\n      if (tx.error.value) {\n        if (tx.error.value !== \"Cancelled\") {\n          error.value = tx.error.value;\n        } else {\n          console.log(\"calcel\");\n        }\n      }\n\n      const accountOld = store.state.robonomicsUIvue.polkadot.accounts.find(\n        (item) => item.address === store.state.robonomicsUIvue.polkadot.address\n      );\n      await robonomics.accountManager.setSender(accountOld.address, {\n        type: accountOld.type,\n        extension: store.state.robonomicsUIvue.polkadot.extensionObj\n      });\n    };\n\n    return {\n      password,\n      passwordRepeat,\n      error,\n      isDisabled,\n      createPassword\n    };\n  }\n};\n</script>\n","import { render } from \"./FormCreate.vue?vue&type=template&id=5af2b0a5\"\nimport script from \"./FormCreate.vue?vue&type=script&lang=js\"\nexport * from \"./FormCreate.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Page.vue?vue&type=template&id=b1162502\"\nimport script from \"./Page.vue?vue&type=script&lang=js\"\nexport * from \"./Page.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div style=\"text-align: right\">\n    <robo-button\n      @click=\"type = 'libp2p'\"\n      :disabled=\"type === 'libp2p'\"\n      size=\"small\"\n    >\n      Libp2p\n    </robo-button>\n    <robo-button\n      @click=\"type = 'launch'\"\n      :disabled=\"type === 'launch'\"\n      size=\"small\"\n    >\n      Parachain\n    </robo-button>\n  </div>\n  <template v-if=\"config\">\n    <Libp2p v-if=\"type === 'libp2p'\" :config=\"config\" @error=\"error\" />\n    <Launch v-else :config=\"config\" />\n  </template>\n  <robo-layout-section v-else>\n    <robo-layout-section gcenter>\n      <robo-loader size=\"2\" />\n    </robo-layout-section>\n  </robo-layout-section>\n</template>\n\n<script>\nimport { ref, watch } from \"vue\";\nimport Launch from \"./Launch.vue\";\nimport Libp2p from \"./Libp2p.vue\";\nimport { useConfig } from \"./common\";\n\nexport default {\n  setup() {\n    const type = ref(\"libp2p\");\n    const { config } = useConfig();\n\n    watch([config, type], () => {\n      if (config.value && !config.value.peer_id && type.value === \"libp2p\") {\n        console.log(`Error: not peer_id`);\n        console.log(config.value);\n        type.value = \"launch\";\n      }\n    });\n\n    return {\n      type,\n      config,\n      error: () => {\n        type.value = \"launch\";\n      }\n    };\n  },\n  components: { Libp2p, Launch }\n};\n</script>\n","<template>\n  <robo-template-devices-layout\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./launch\";\n\nexport default {\n  props: {\n    config: Object\n  },\n  setup() {\n    const { data, updateTime, run, launch } = useData();\n    const store = useStore();\n\n    run();\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport {\n  decryptMsg,\n  getConfigCid,\n  getLastDatalog,\n  parseJson\n} from \"@/utils/telemetry\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\n\nexport const chainSS58 = 32;\n\nconst catFile = async (store, ipfs, cid) => {\n  if (!cid) {\n    return false;\n  }\n  try {\n    return await ipfs.catViaGateway(\n      store.state.robonomicsUIvue.ipfs.activegateway,\n      cid,\n      2\n    );\n  } catch (_) {\n    try {\n      const res = await ipfs.catViaGateways(\n        store.state.robonomicsUIvue.ipfs.gateways,\n        cid\n      );\n      store.commit(\"ipfs/setActiveGateway\", res.gateway);\n      return res.result;\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  return false;\n};\n\nexport const decryptMsgContoller = async (\n  encryptedMsg,\n  controller,\n  keyring\n) => {\n  if (encryptedMsg) {\n    try {\n      const seed = decryptMsg(\n        encryptedMsg[controller.address],\n        controller.publicKey,\n        controller\n      );\n      const admin = keyring.addFromUri(seed, {}, \"ed25519\");\n      const data = decryptMsg(encryptedMsg.data, controller.publicKey, admin);\n      return parseJson(data);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n  return false;\n};\n\nexport const catFileController = async (\n  cid,\n  controller,\n  store,\n  ipfs,\n  keyring\n) => {\n  if (cid) {\n    const data = await catFile(store, ipfs, cid);\n    if (!data) {\n      console.log(`Error: ${cid} not found in ipfs`);\n      return null;\n    }\n    const result = await decryptMsgContoller(data, controller, keyring);\n    if (result) {\n      return result;\n    } else {\n      console.log(`Error: decryptMsg`);\n    }\n  }\n  return null;\n};\n\nconst loadSetup = (store, keyring) => {\n  if (!store.state.robonomicsUIvue.rws.active) {\n    return;\n  }\n  const setupRaw = store.state.robonomicsUIvue.rws.list.find(\n    (item) => item.owner === store.state.robonomicsUIvue.rws.active\n  );\n  if (setupRaw) {\n    try {\n      return {\n        controller: keyring.addFromUri(setupRaw.scontroller, {}, \"ed25519\"),\n        owner: setupRaw.owner\n      };\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return {\n    controller: null,\n    owner: null\n  };\n};\n\nexport const useSetup = () => {\n  const controller = ref(null);\n  const owner = ref(null);\n\n  const store = useStore();\n\n  const keyring = new Keyring({\n    ss58Format: chainSS58\n  });\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      const setup = loadSetup(store, keyring);\n      controller.value = setup.controller;\n      owner.value = setup.owner;\n    },\n    { immediate: true }\n  );\n\n  return { controller, owner };\n};\n\nexport const notify = (store, text, timeout = 3000) => {\n  store.dispatch(\"app/setStatus\", {\n    value: text,\n    timeout\n  });\n  console.log(text);\n};\n\nexport const setStatusLaunch = (store, command, status) => {\n  store.commit(\n    \"rws/setLaunch\",\n    JSON.stringify({ ...command, tx: { tx_status: status } })\n  );\n};\n\nexport const useLastDatalog = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const robonomics = useRobonomics();\n  const { controller } = useSetup();\n\n  const keyring = new Keyring({\n    ss58Format: chainSS58\n  });\n\n  (async () => {\n    const datalog = await getLastDatalog(robonomics, controller.value.address);\n    cid.value = datalog.cid;\n    updateTime.value = datalog.timestamp;\n    data.value = await catFileController(\n      cid.value,\n      controller.value,\n      store,\n      ipfs,\n      keyring\n    );\n  })();\n\n  return { cid, updateTime, data };\n};\n\nexport const useConfig = () => {\n  const cid = ref(null);\n  const config = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const robonomics = useRobonomics();\n  const { controller } = useSetup();\n\n  const keyring = new Keyring({\n    ss58Format: chainSS58\n  });\n\n  (async () => {\n    notify(store, \"Find twin id\");\n    const datalog = await getLastDatalog(robonomics, controller.value.address);\n    const result = await catFileController(\n      datalog.cid,\n      controller.value,\n      store,\n      ipfs,\n      keyring\n    );\n\n    if (result) {\n      const twin_id = result.twin_id;\n      notify(store, `Twin id #${twin_id}`);\n\n      notify(store, `Start load config`);\n      cid.value = await getConfigCid(\n        robonomics,\n        controller.value.address,\n        twin_id\n      );\n\n      config.value = await catFileController(\n        cid.value,\n        controller.value,\n        store,\n        ipfs,\n        keyring\n      );\n      notify(store, `Config loaded`);\n    } else {\n      notify(store, \"Error: not found twin id\");\n    }\n  })();\n\n  return { config, cid };\n};\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useIpfs } from \"@/hooks/useIpfs\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { useSend } from \"@/hooks/useSend\";\nimport { getLastDatalog } from \"@/utils/telemetry\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport { stringToU8a } from \"@polkadot/util\";\nimport { onUnmounted, ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  catFileController,\n  chainSS58,\n  notify,\n  setStatusLaunch,\n  useSetup\n} from \"./common\";\n\nexport const useData = () => {\n  const cid = ref(null);\n  const updateTime = ref(null);\n  const data = ref(null);\n\n  const store = useStore();\n  const ipfs = useIpfs();\n  const robonomics = useRobonomics();\n  const transaction = useSend();\n  const devices = useDevices();\n  const { controller, owner } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  const keyring = new Keyring({\n    ss58Format: chainSS58\n  });\n\n  let unsubscribeDatalog;\n  const watchDatalog = async () => {\n    unsubscribeDatalog = await robonomics.datalog.on(\n      { method: \"NewRecord\" },\n      (results) => {\n        const r = results.filter((item) => {\n          return (\n            item.success && item.data[0].toHuman() === controller.value.address\n          );\n        });\n        for (const item of r) {\n          updateTime.value = item.data[1].toNumber();\n          cid.value = item.data[2].toHuman();\n        }\n      }\n    );\n  };\n\n  watch(cid, async () => {\n    data.value = await catFileController(\n      cid.value,\n      controller.value,\n      store,\n      ipfs,\n      keyring\n    );\n  });\n\n  const run = async () => {\n    const datalog = await getLastDatalog(robonomics, controller.value.address);\n    cid.value = datalog.cid;\n    updateTime.value = datalog.updateTime;\n    watchDatalog();\n  };\n\n  const stop = () => {\n    if (unsubscribeDatalog) {\n      unsubscribeDatalog();\n    }\n  };\n\n  onUnmounted(() => {\n    console.log(\"unmount launch\");\n    stop();\n  });\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n    console.log(`command ${JSON.stringify(command)}`);\n\n    if (\n      robonomics.accountManager.account.address !==\n        store.state.robonomicsUIvue.rws.active &&\n      !devices.devices.value.includes(robonomics.accountManager.account.address)\n    ) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    if (!ipfs.isAuth()) {\n      notify(store, `Authorization on ipfs node`);\n      try {\n        const signature = (\n          await robonomics.accountManager.account.signMsg(\n            stringToU8a(robonomics.accountManager.account.address)\n          )\n        ).toString();\n        ipfs.auth(\n          owner.value,\n          robonomics.accountManager.account.address,\n          signature\n        );\n      } catch (error) {\n        if (error.message === \"Cancelled\") {\n          setStatusLaunch(store, command, \"declined\");\n        } else {\n          console.log(error);\n          setStatusLaunch(store, command, \"error\");\n        }\n        return;\n      }\n      setStatusLaunch(store, command, \"approved\");\n    }\n\n    let commandCid;\n    try {\n      commandCid = await ipfs.add(JSON.stringify(command.launch));\n    } catch (error) {\n      setStatusLaunch(store, command, \"error\");\n      notify(store, `Error: ${error.message}`);\n      return;\n    }\n    console.log(`launch ipfs file ${commandCid.path}`);\n\n    notify(store, `Send launch`);\n    const call = robonomics.launch.send(\n      controller.value.address,\n      commandCid.path\n    );\n    const tx = transaction.createTx();\n    await transaction.send(tx, call, owner.value);\n    if (tx.error.value) {\n      if (tx.error.value !== \"Cancelled\") {\n        setStatusLaunch(store, command, \"error\");\n        notify(store, `Error: ${tx.error.value}`);\n      } else {\n        setStatusLaunch(store, command, \"declined\");\n        notify(store, \"Calcel\");\n      }\n    } else {\n      console.log(command);\n      setStatusLaunch(store, command, \"success\");\n      notify(store, \"Launch sended\");\n    }\n  };\n\n  return { cid, updateTime, data, run, stop, launch };\n};\n","import { render } from \"./Launch.vue?vue&type=template&id=e9428760\"\nimport script from \"./Launch.vue?vue&type=script&lang=js\"\nexport * from \"./Launch.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <robo-template-devices-layout\n    :config=\"config\"\n    :datalog=\"data\"\n    :updateTime=\"updateTime\"\n  />\n</template>\n\n<script>\nimport { watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport { useData } from \"./libp2p\";\n\nexport default {\n  props: {\n    config: Object\n  },\n  emits: [\"error\"],\n  setup(props, { emit }) {\n    const updateTime = \"\";\n    const { data, run, launch } = useData();\n\n    if (props.config.peer_id) {\n      (async () => {\n        const result = await run(props.config.peer_id);\n        if (!result) {\n          emit(\"error\");\n        }\n      })();\n    } else {\n      console.log(`Error: not peer_id`);\n      console.log(props.config);\n    }\n\n    const store = useStore();\n\n    watch(\n      () => store.state.robonomicsUIvue.rws.launch,\n      (value) => {\n        try {\n          launch(JSON.parse(value));\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n\n    return { data, updateTime };\n  }\n};\n</script>\n","import { pipe } from \"it-pipe\";\nimport { fromString as uint8ArrayFromString } from \"uint8arrays/from-string\";\nimport { toString as uint8ArrayToString } from \"uint8arrays/to-string\";\n\nexport function createHa() {\n  return (components) => {\n    async function getRequest(stream) {\n      return pipe(stream, async function (source) {\n        let result = \"\";\n        for await (const data of source) {\n          result += uint8ArrayToString(data.subarray());\n        }\n        return JSON.parse(result);\n      });\n    }\n\n    async function sendResponse(stream, msg) {\n      return pipe(\n        [uint8ArrayFromString(JSON.stringify(msg))],\n        stream.sink\n      ).finally(() => {\n        stream.close();\n      });\n    }\n\n    return {\n      async handle(\n        protocol,\n        handler,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        await components.registrar.handle(\n          protocol,\n          async ({ stream }) => {\n            handler(await getRequest(stream), stream);\n          },\n          options\n        );\n      },\n      async request(\n        connection,\n        protocol,\n        data,\n        options = {\n          runOnTransientConnection: true\n        }\n      ) {\n        if (connection.status !== \"open\") {\n          return;\n        }\n        const stream = await connection.newStream([protocol], options);\n        return pipe(\n          [uint8ArrayFromString(JSON.stringify(data))],\n          stream,\n          async function (source) {\n            let result = \"\";\n            for await (const data of source) {\n              result += uint8ArrayToString(data.subarray());\n            }\n            try {\n              // stream.close();\n              return JSON.parse(result);\n            } catch (error) {\n              return result;\n            }\n          }\n        );\n      },\n      utils: {\n        getRequest,\n        sendResponse\n      }\n    };\n  };\n}\n","import { noise } from \"@chainsafe/libp2p-noise\";\nimport { mplex } from \"@libp2p/mplex\";\nimport { webRTC } from \"@libp2p/webrtc\";\nimport { webSockets } from \"@libp2p/websockets\";\nimport * as filters from \"@libp2p/websockets/filters\";\nimport { multiaddr } from \"@multiformats/multiaddr\";\nimport { createLibp2p } from \"libp2p\";\nimport { circuitRelayTransport } from \"libp2p/circuit-relay\";\nimport { identifyService } from \"libp2p/identify\";\nimport { createHa } from \"./ha\";\n\nexport async function createNode() {\n  const node = await createLibp2p({\n    addresses: {\n      listen: [\"/webrtc\"]\n    },\n    transports: [\n      webSockets({\n        filter: filters.all\n      }),\n      webRTC(),\n      circuitRelayTransport()\n    ],\n    streamMuxers: [mplex()],\n    connectionEncryption: [noise()],\n    services: {\n      identify: identifyService(),\n      ha: createHa()\n    },\n    connectionGater: {\n      denyDialMultiaddr: () => {\n        return false;\n      }\n    },\n    connectionManager: {\n      minConnections: 0\n    }\n  });\n\n  return node;\n}\n\nlet node = null;\nlet connections = [];\nlet connection = null;\n\nexport async function start() {\n  if (node) {\n    return;\n  }\n  node = await createNode();\n  await node.start();\n  console.log(`Node started with id ${node.peerId.toString()}`);\n\n  function updateConnectionsList() {\n    connections = node.getConnections().map((item) => {\n      return item.remoteAddr.toString();\n    });\n    console.log(\"Update Connections List\", connections);\n  }\n\n  node.addEventListener(\"connection:open\", (event) => {\n    console.log(\"connected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n  });\n\n  node.addEventListener(\"connection:close\", (event) => {\n    console.log(\"disconected\", event.detail.remoteAddr.toString());\n    updateConnectionsList();\n    if (\n      event.detail.remoteAddr.toString() === connection.remoteAddr.toString()\n    ) {\n      reconnect(connection.remoteAddr.toString());\n    }\n  });\n\n  return node;\n}\n\nexport async function reconnect(addr) {\n  try {\n    await connect(addr);\n  } catch (error) {\n    console.log(error);\n    setTimeout(async () => {\n      if (addr && !connections.includes(addr)) {\n        await reconnect(addr);\n      }\n    }, 3000);\n  }\n}\n\nexport async function connect(addr) {\n  const listenerMultiaddr = multiaddr(addr);\n  connection = await node.dial(listenerMultiaddr);\n}\n\nexport function request(data) {\n  if (node && connection) {\n    return node.services.ha.request(connection, \"/call\", data);\n  }\n  throw new Error(\"error\");\n}\n","import { useDevices } from \"@/hooks/useDevices\";\nimport { useRobonomics } from \"@/hooks/useRobonomics\";\nimport { connect, request, start } from \"@/utils/libp2p/libp2p\";\nimport { Keyring } from \"@polkadot/keyring\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from \"vuex\";\nimport {\n  chainSS58,\n  decryptMsgContoller,\n  notify,\n  setStatusLaunch,\n  useSetup\n} from \"./common\";\n\nexport const useData = () => {\n  const data = ref(null);\n\n  const store = useStore();\n  const robonomics = useRobonomics();\n  const devices = useDevices();\n  const { controller } = useSetup();\n\n  watch(\n    () => store.state.robonomicsUIvue.rws.active,\n    () => {\n      devices.owner.value = store.state.robonomicsUIvue.rws.active;\n    },\n    { immediate: true }\n  );\n\n  const keyring = new Keyring({\n    ss58Format: chainSS58\n  });\n\n  const run = async (peer_id) => {\n    const node = await start();\n    try {\n      notify(store, `Connect to peer id ${peer_id}`);\n      await connect(\n        `/dns4/libp2p-relay.robonomics.network/tcp/443/wss/p2p/12D3KooWEmZfGh3HEy7rQPKZ8DpJRYfFcbULN97t3hGwkB5xPmjn/p2p-circuit/p2p/${peer_id}`\n        // `/dns4/vol4.work.gd/tcp/443/wss/p2p/12D3KooWEmZfGh3HEy7rQPKZ8DpJRYfFcbULN97t3hGwkB5xPmjn/p2p-circuit/p2p/${result.peer_id}`\n      );\n      notify(store, `Connected`);\n      node.services.ha.handle(\"/update\", async (dataRow, stream) => {\n        const result = await decryptMsgContoller(\n          JSON.parse(dataRow),\n          controller.value,\n          keyring\n        );\n        if (result) {\n          data.value = result;\n          await node.services.ha.utils.sendResponse(stream, {\n            result: true\n          });\n        } else {\n          notify(store, `Error: decryptMsg`);\n        }\n      });\n      return true;\n    } catch (error) {\n      notify(store, `Error: ${error.message}`);\n      console.log(error);\n    }\n    return false;\n  };\n\n  const launch = async (command) => {\n    console.log(command.launch.params.entity_id, command.tx.tx_status);\n    if (command.tx.tx_status !== \"pending\") {\n      return;\n    }\n\n    notify(store, `Launch command`);\n    console.log(`command ${JSON.stringify(command)}`);\n\n    if (\n      robonomics.accountManager.account.address !==\n        store.state.robonomicsUIvue.rws.active &&\n      !devices.devices.value.includes(robonomics.accountManager.account.address)\n    ) {\n      notify(store, `Error: You do not have access to device management.`);\n      setStatusLaunch(store, command, \"error\");\n      return;\n    }\n\n    const response = await request(command.launch);\n    console.log(`response: ${response}`);\n\n    setStatusLaunch(store, command, \"success\");\n  };\n\n  return { data, run, launch };\n};\n","import { render } from \"./Libp2p.vue?vue&type=template&id=04a8478b\"\nimport script from \"./Libp2p.vue?vue&type=script&lang=js\"\nexport * from \"./Libp2p.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./Telemetry.vue?vue&type=template&id=75623572\"\nimport script from \"./Telemetry.vue?vue&type=script&lang=js\"\nexport * from \"./Telemetry.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from \"vue-router\";\nimport Home from \"./views/Home.vue\";\nimport PathNotFound from \"./views/PathNotFound.vue\";\nimport RwsActivate from \"./views/RwsActivate.vue\";\nimport RwsSetup from \"./views/RwsSetup.vue\";\nimport RwsSetupsList from \"./views/RwsSetupsList.vue\";\nimport RwsUserSetup from \"./views/RwsUserSetup.vue\";\nimport RwsUsersList from \"./views/RwsUsersList.vue\";\nimport Services from \"./views/Services.vue\";\nimport HaSetup from \"./views/haSetup/Page.vue\";\nimport Telemetry from \"./views/telemetry/Telemetry.vue\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Home\",\n    component: Home,\n    meta: {\n      title: \"Dashboard\"\n    }\n  },\n  {\n    path: \"/rws-activate\",\n    name: \"rwsActivate\",\n    component: RwsActivate,\n    meta: {\n      title: \"RWS activation\"\n    }\n  },\n  {\n    path: \"/rws-setup\",\n    name: \"rwsSetup\",\n    component: RwsSetup,\n    meta: {\n      title: \"RWS setup\"\n    }\n  },\n  {\n    path: \"/rws-setups-list\",\n    name: \"rwsSetupsList\",\n    component: RwsSetupsList,\n    meta: {\n      title: \"Your RWS setups\"\n    }\n  },\n  {\n    path: \"/rws-user-setup\",\n    name: \"rwsUserSetup\",\n    component: RwsUserSetup,\n    meta: {\n      title: \"RWS add user\"\n    }\n  },\n  {\n    path: \"/rws-users-list\",\n    name: \"rwsUsersList\",\n    component: RwsUsersList,\n    meta: {\n      title: \"Users in your RWS\"\n    }\n  },\n  {\n    path: \"/telemetry\",\n    name: \"telemetry\",\n    component: Telemetry,\n    meta: {\n      title: \"Smart devices\"\n    }\n  },\n  {\n    path: \"/hasetup\",\n    name: \"haSetup\",\n    component: HaSetup,\n    meta: {\n      title: \"HA setup\"\n    }\n  },\n  {\n    path: \"/services\",\n    name: \"services\",\n    component: Services,\n    meta: {\n      title: \"Services\"\n    }\n  },\n  { path: \"/:pathMatch(.*)*\", component: PathNotFound }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\nexport default router;\n","import { createStore } from \"vuex\";\n\nconst store = createStore({\n  state: {\n    name: \"Vue\"\n  }\n});\n\nexport default store;\n","import { fromUnit } from \"./tools\";\nexport default {\n  install: (app) => {\n    app.config.globalProperties.$filters = {\n      balance(value, decimals, symbol) {\n        if (typeof value === \"string\" || typeof value === \"number\") {\n          return `${fromUnit(value, decimals, 4)} ${symbol}`;\n        }\n        return \"\";\n      }\n    };\n  }\n};\n","import { Buffer } from \"buffer\";\nimport { robonomicsUI } from \"robonomics-ui-vue\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport ipfs from \"./plugins/ipfs\";\nimport robonomics from \"./plugins/robonomics\";\nimport router from \"./router\";\nimport store from \"./store\";\nimport filters from \"./utils/filters\";\n\nimport \"robonomics-ui-vue/style.css\";\n\nwindow.Buffer = Buffer;\n\nconst app = createApp(App);\n\napp\n  .use(router)\n  .use(store)\n  .use(filters)\n  .use(robonomics, {\n    // endpoint: \"ws://127.0.0.1:9944\"\n    endpoint: \"wss://kusama.rpc.robonomics.network/\"\n  })\n  .use(ipfs, {\n    api: { gateway: \"https://ipfs.url.today\" },\n    gateways: [\n      \"https://ipfs.url.today/ipfs/\",\n      \"https://cf-ipfs.com/ipfs/\",\n      \"https://ipfs.io/ipfs/\",\n      \"https://gateway.pinata.cloud/ipfs/\",\n      \"https://gateway.ipfs.io/ipfs/\",\n      \"https://aira.mypinata.cloud/ipfs/\"\n    ]\n  })\n  .use(robonomicsUI, { store })\n  .mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkdapp_robonomics_network\"] = self[\"webpackChunkdapp_robonomics_network\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(8374); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["$data","isReady","_createBlock","_component_main_layout","title","_createVNode","_component_router_view","_component_robo_layout_header","logoIcon","navigation","$props","version","toDecimal","v","Decimal","toString","round","place","todp","fromUnit","decimals","dp","div","pow","toExpNeg","toExpPos","props","type","String","default","inject","data","links","link","this","$router","resolve","name","path","computed","robonomics","toRaw","RobonomicsProvider","instance","value","watch","signer","signRaw","$store","state","robonomicsUIvue","polkadot","address","handlerAccount","handler","extensionObj","immediate","created","res","axios","get","tag_name","_","console","log","methods","unsubscribeBalance","account","accounts","find","item","accountManager","setSender","extension","getBalance","r","transferable","free","sub","feeFrozen","commit","api","registry","chainDecimals","__exports__","components","MainLayout","$route","route","meta","document","deep","async","init","process","dispatch","IpfsProvider","gateways","rws","list","length","checkStatus","owner","enddate","now","dayjs","valueOf","end","Number","dataRaw","getLedger","isEmpty","issue_time","issueTime","toNumber","days","kind","isDaily","DAYS_TO_MS","arr","push","render","IpfsApiClient","constructor","endpoint","authHeader","_create","client","create","_options","url","headers","authorization","isAuth","auth","signature","authHeaderRaw","Buffer","from","authClear","ls","cid","files","file","cat","decoder","TextDecoder","content","chunk","decode","stream","add","catViaGateway","gateway","attempts","index","error","Error","catViaGateways","result","message","install","app","params","ref","provide","AccountManagerDapp","AccountManager","keyring","config","super","loadAll","setReady","beforeSetSender","getPair","loadInjected","afterSetSender","isInjected","setSigner","signMsg","u8aToHex","u8aWrapBytes","reactive","undefined","Robonomics","createInstance","setAccountManager","store","useStore","window","location","href","_component_robo_layout_section","_component_robo_template_rws_activate","price","$setup","activationtime","available","freeAuctions","onOnActivate","onActivate","rwsStatus","status","rwsMessage","useRobonomics","useAccount","unsubscribe","onChange","useBalance","balance","useDevices","initialOwner","devices","loadDevices","validateAddress","getDevices","map","toHuman","useSubscription","getReferenceCallWeight","consts","referenceCallWeight","getFreeWeightCalc","ledger","freeWeight","lastUpdate","Date","utps","tps","isLifetime","duration_ms","delta","Math","floor","validUntil","dataRawObject","countMonth","isActive","hasSubscription","loadLedger","useSend","getCallWeight","tx","paymentInfo","weight","checkWeight","freeWeightCalc","callWeight","createTx","send","call","subscription","nonce","rpc","system","accountNextIndex","signAndSend","block","e","setup","unsubscribeBlock","unsubscribeAccount","getFreeAuctions","events","onBlock","minimalBid","getMinimalBid","bnToBn","onUnmounted","transaction","oldStatus","lt","bid","getFirtsFreeAuction","includes","utility","batch","setDevices","stopWatchEffect","watchEffect","priceFormat","rwsrecover","_component_robo_template_rws_setup","ownerNew","$event","controller","controllerNew","scontroller","scontrollerNew","nameNew","enddateNew","onOnRwsSetup","onSetup","_component_robo_section","width","gcenter","_component_robo_template_rws_setups_empty","rwssave","offset","_component_robo_grid","gap","_createElementBlock","_Fragment","_renderList","_component_robo_template_rws_setup_listitem","key","onEdit","onOnRwsDelete","onDelete","_component_robo_button","router","setStatus","_component_robo_template_rws_user_setup","addressNew","onOnUserSetup","active","rwsactive","users","getters","newListDevices","filter","fillStorage","user","galign","minColumnWidth","_component_robo_card","_component_robo_link","_component_robo_image","src","_component_robo_text","size","script","_createElementVNode","mark","_component_form_check","onCheck","handleCheck","_component_form_create","isCheсk","ownerAddress","controllerAddress","userSeed","marktitle","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onSubmit","_cache","_withModifiers","args","validate","columns","_component_robo_grid_item","_component_robo_template_rws_activeselect","label","hasRwsSetup","_component_robo_address_polkadot","chain","_component_robo_input","seed","tip","warn","highlight","useIpfs","clearJson","string","replaceAll","parseJson","JSON","parse","decryptMsg","encryptMessage","pk","decryptMessage","hexToU8a","u8aToString","getLastDatalog","datalog","read","last","timestamp","getConfigCid","twin_id","twin","getTwin","configHex","Object","keys","utils","emits","emit","ipfs","validateRequired","hasDeviceSubscription","device","validateSeed","k","Keyring","addFromUri","encodeAddress","activegateway","createPassword","disabled","password","passwordRepeat","isDisabled","Boolean","toRefs","accountUser","ss58Format","chainSS58","encrypt","decodeAddress","passwordForRecovery","passwordForAdmin","checkPasswordsMatch","write","stringify","ha","admin","accountOld","FormCheck","FormCreate","style","onClick","_component_Libp2p","onError","_component_Launch","_component_robo_loader","_component_robo_template_devices_layout","updateTime","catFile","decryptMsgContoller","encryptedMsg","publicKey","catFileController","loadSetup","setupRaw","useSetup","notify","text","timeout","setStatusLaunch","command","tx_status","useConfig","useData","unsubscribeDatalog","watchDatalog","on","method","results","success","run","stop","launch","entity_id","stringToU8a","commandCid","createHa","getRequest","pipe","source","uint8ArrayToString","subarray","sendResponse","msg","uint8ArrayFromString","sink","finally","close","handle","protocol","options","runOnTransientConnection","registrar","request","connection","newStream","createNode","node","createLibp2p","addresses","listen","transports","webSockets","filters","webRTC","circuitRelayTransport","streamMuxers","mplex","connectionEncryption","noise","services","identify","identifyService","connectionGater","denyDialMultiaddr","connectionManager","minConnections","connections","start","peerId","addEventListener","event","detail","remoteAddr","updateConnectionsList","reconnect","getConnections","addr","connect","setTimeout","listenerMultiaddr","multiaddr","dial","peer_id","dataRow","response","Libp2p","Launch","routes","component","Home","RwsActivate","RwsSetup","RwsSetupsList","RwsUserSetup","RwsUsersList","Telemetry","HaSetup","Services","PathNotFound","createRouter","history","createWebHashHistory","createStore","globalProperties","$filters","symbol","createApp","App","use","robonomicsUI","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","id","loaded","__webpack_modules__","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","__proto__","t","mode","then","ns","def","current","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","children","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}